{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPVowY4et38Ew34VBh7j8H3"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":106,"metadata":{"id":"iQl-I5LV6DFc","executionInfo":{"status":"ok","timestamp":1718822676079,"user_tz":-330,"elapsed":3925,"user":{"displayName":"Shibin Nair","userId":"12312801401816155479"}}},"outputs":[],"source":["import pandas as pd\n","\n","df = pd.read_csv('creditcard.csv')\n","\n","df.dropna(inplace=True)"]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":256},"id":"Yq16AJc4GWil","executionInfo":{"status":"ok","timestamp":1718822678704,"user_tz":-330,"elapsed":596,"user":{"displayName":"Shibin Nair","userId":"12312801401816155479"}},"outputId":"18284402-6908-4279-d985-ad6f77b9278c"},"execution_count":107,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Time        V1        V2        V3        V4        V5        V6        V7  \\\n","0   0.0 -1.359807 -0.072781  2.536347  1.378155 -0.338321  0.462388  0.239599   \n","1   0.0  1.191857  0.266151  0.166480  0.448154  0.060018 -0.082361 -0.078803   \n","2   1.0 -1.358354 -1.340163  1.773209  0.379780 -0.503198  1.800499  0.791461   \n","3   1.0 -0.966272 -0.185226  1.792993 -0.863291 -0.010309  1.247203  0.237609   \n","4   2.0 -1.158233  0.877737  1.548718  0.403034 -0.407193  0.095921  0.592941   \n","\n","         V8        V9  ...       V21       V22       V23       V24       V25  \\\n","0  0.098698  0.363787  ... -0.018307  0.277838 -0.110474  0.066928  0.128539   \n","1  0.085102 -0.255425  ... -0.225775 -0.638672  0.101288 -0.339846  0.167170   \n","2  0.247676 -1.514654  ...  0.247998  0.771679  0.909412 -0.689281 -0.327642   \n","3  0.377436 -1.387024  ... -0.108300  0.005274 -0.190321 -1.175575  0.647376   \n","4 -0.270533  0.817739  ... -0.009431  0.798278 -0.137458  0.141267 -0.206010   \n","\n","        V26       V27       V28  Amount  Class  \n","0 -0.189115  0.133558 -0.021053  149.62    0.0  \n","1  0.125895 -0.008983  0.014724    2.69    0.0  \n","2 -0.139097 -0.055353 -0.059752  378.66    0.0  \n","3 -0.221929  0.062723  0.061458  123.50    0.0  \n","4  0.502292  0.219422  0.215153   69.99    0.0  \n","\n","[5 rows x 31 columns]"],"text/html":["\n","  <div id=\"df-158ad344-b756-465e-8b53-bbfd3691de71\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Time</th>\n","      <th>V1</th>\n","      <th>V2</th>\n","      <th>V3</th>\n","      <th>V4</th>\n","      <th>V5</th>\n","      <th>V6</th>\n","      <th>V7</th>\n","      <th>V8</th>\n","      <th>V9</th>\n","      <th>...</th>\n","      <th>V21</th>\n","      <th>V22</th>\n","      <th>V23</th>\n","      <th>V24</th>\n","      <th>V25</th>\n","      <th>V26</th>\n","      <th>V27</th>\n","      <th>V28</th>\n","      <th>Amount</th>\n","      <th>Class</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.0</td>\n","      <td>-1.359807</td>\n","      <td>-0.072781</td>\n","      <td>2.536347</td>\n","      <td>1.378155</td>\n","      <td>-0.338321</td>\n","      <td>0.462388</td>\n","      <td>0.239599</td>\n","      <td>0.098698</td>\n","      <td>0.363787</td>\n","      <td>...</td>\n","      <td>-0.018307</td>\n","      <td>0.277838</td>\n","      <td>-0.110474</td>\n","      <td>0.066928</td>\n","      <td>0.128539</td>\n","      <td>-0.189115</td>\n","      <td>0.133558</td>\n","      <td>-0.021053</td>\n","      <td>149.62</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.0</td>\n","      <td>1.191857</td>\n","      <td>0.266151</td>\n","      <td>0.166480</td>\n","      <td>0.448154</td>\n","      <td>0.060018</td>\n","      <td>-0.082361</td>\n","      <td>-0.078803</td>\n","      <td>0.085102</td>\n","      <td>-0.255425</td>\n","      <td>...</td>\n","      <td>-0.225775</td>\n","      <td>-0.638672</td>\n","      <td>0.101288</td>\n","      <td>-0.339846</td>\n","      <td>0.167170</td>\n","      <td>0.125895</td>\n","      <td>-0.008983</td>\n","      <td>0.014724</td>\n","      <td>2.69</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1.0</td>\n","      <td>-1.358354</td>\n","      <td>-1.340163</td>\n","      <td>1.773209</td>\n","      <td>0.379780</td>\n","      <td>-0.503198</td>\n","      <td>1.800499</td>\n","      <td>0.791461</td>\n","      <td>0.247676</td>\n","      <td>-1.514654</td>\n","      <td>...</td>\n","      <td>0.247998</td>\n","      <td>0.771679</td>\n","      <td>0.909412</td>\n","      <td>-0.689281</td>\n","      <td>-0.327642</td>\n","      <td>-0.139097</td>\n","      <td>-0.055353</td>\n","      <td>-0.059752</td>\n","      <td>378.66</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1.0</td>\n","      <td>-0.966272</td>\n","      <td>-0.185226</td>\n","      <td>1.792993</td>\n","      <td>-0.863291</td>\n","      <td>-0.010309</td>\n","      <td>1.247203</td>\n","      <td>0.237609</td>\n","      <td>0.377436</td>\n","      <td>-1.387024</td>\n","      <td>...</td>\n","      <td>-0.108300</td>\n","      <td>0.005274</td>\n","      <td>-0.190321</td>\n","      <td>-1.175575</td>\n","      <td>0.647376</td>\n","      <td>-0.221929</td>\n","      <td>0.062723</td>\n","      <td>0.061458</td>\n","      <td>123.50</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2.0</td>\n","      <td>-1.158233</td>\n","      <td>0.877737</td>\n","      <td>1.548718</td>\n","      <td>0.403034</td>\n","      <td>-0.407193</td>\n","      <td>0.095921</td>\n","      <td>0.592941</td>\n","      <td>-0.270533</td>\n","      <td>0.817739</td>\n","      <td>...</td>\n","      <td>-0.009431</td>\n","      <td>0.798278</td>\n","      <td>-0.137458</td>\n","      <td>0.141267</td>\n","      <td>-0.206010</td>\n","      <td>0.502292</td>\n","      <td>0.219422</td>\n","      <td>0.215153</td>\n","      <td>69.99</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows Ã— 31 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-158ad344-b756-465e-8b53-bbfd3691de71')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-158ad344-b756-465e-8b53-bbfd3691de71 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-158ad344-b756-465e-8b53-bbfd3691de71');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-501bae9c-8a05-4714-8436-16d45a0f0d6a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-501bae9c-8a05-4714-8436-16d45a0f0d6a')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-501bae9c-8a05-4714-8436-16d45a0f0d6a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":107}]},{"cell_type":"code","source":["df.info()\n","\n","df.describe()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"KFSAwYa4GGJp","executionInfo":{"status":"ok","timestamp":1718822682343,"user_tz":-330,"elapsed":1223,"user":{"displayName":"Shibin Nair","userId":"12312801401816155479"}},"outputId":"c5246670-9fa9-494a-9600-f64879a9e0fe"},"execution_count":108,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Index: 225834 entries, 0 to 225833\n","Data columns (total 31 columns):\n"," #   Column  Non-Null Count   Dtype  \n","---  ------  --------------   -----  \n"," 0   Time    225834 non-null  float64\n"," 1   V1      225834 non-null  float64\n"," 2   V2      225834 non-null  float64\n"," 3   V3      225834 non-null  float64\n"," 4   V4      225834 non-null  float64\n"," 5   V5      225834 non-null  float64\n"," 6   V6      225834 non-null  float64\n"," 7   V7      225834 non-null  float64\n"," 8   V8      225834 non-null  float64\n"," 9   V9      225834 non-null  float64\n"," 10  V10     225834 non-null  float64\n"," 11  V11     225834 non-null  float64\n"," 12  V12     225834 non-null  float64\n"," 13  V13     225834 non-null  float64\n"," 14  V14     225834 non-null  float64\n"," 15  V15     225834 non-null  float64\n"," 16  V16     225834 non-null  float64\n"," 17  V17     225834 non-null  float64\n"," 18  V18     225834 non-null  float64\n"," 19  V19     225834 non-null  float64\n"," 20  V20     225834 non-null  float64\n"," 21  V21     225834 non-null  float64\n"," 22  V22     225834 non-null  float64\n"," 23  V23     225834 non-null  float64\n"," 24  V24     225834 non-null  float64\n"," 25  V25     225834 non-null  float64\n"," 26  V26     225834 non-null  float64\n"," 27  V27     225834 non-null  float64\n"," 28  V28     225834 non-null  float64\n"," 29  Amount  225834 non-null  float64\n"," 30  Class   225834 non-null  float64\n","dtypes: float64(31)\n","memory usage: 55.1 MB\n"]},{"output_type":"execute_result","data":{"text/plain":["                Time             V1             V2             V3  \\\n","count  225834.000000  225834.000000  225834.000000  225834.000000   \n","mean    78457.091147      -0.070221      -0.012718       0.190612   \n","std     39188.639076       1.941389       1.656331       1.488740   \n","min         0.000000     -56.407510     -72.715728     -33.680984   \n","25%     47434.000000      -0.950632      -0.599636      -0.555614   \n","50%     72855.000000      -0.038582       0.068950       0.379978   \n","75%    119668.000000       1.239281       0.781021       1.158088   \n","max    144416.000000       2.454930      22.057729       9.382558   \n","\n","                  V4             V5             V6             V7  \\\n","count  225834.000000  225834.000000  225834.000000  225834.000000   \n","mean        0.046190      -0.066129       0.031791      -0.028068   \n","std         1.410838       1.372048       1.320680       1.227409   \n","min        -5.683171     -42.147898     -26.160506     -43.557242   \n","25%        -0.823058      -0.751399      -0.730548      -0.569140   \n","50%         0.043471      -0.125020      -0.236387       0.008559   \n","75%         0.839729       0.528213       0.434236       0.530821   \n","max        16.875344      34.801666      22.529298      36.877368   \n","\n","                  V8             V9  ...            V21            V22  \\\n","count  225834.000000  225834.000000  ...  225834.000000  225834.000000   \n","mean        0.004999       0.002379  ...      -0.006618      -0.023940   \n","std         1.209119       1.123912  ...       0.744742       0.708106   \n","min       -73.216718     -13.434066  ...     -34.830382     -10.933144   \n","25%        -0.194608      -0.662162  ...      -0.225627      -0.533444   \n","50%         0.034117      -0.068614  ...      -0.035278      -0.012444   \n","75%         0.332996       0.613875  ...       0.167722       0.469443   \n","max        20.007208      15.594995  ...      27.202839      10.503090   \n","\n","                 V23            V24            V25            V26  \\\n","count  225834.000000  225834.000000  225834.000000  225834.000000   \n","mean       -0.010388       0.001126       0.039684       0.003210   \n","std         0.627828       0.605989       0.506562       0.486694   \n","min       -44.807735      -2.836627     -10.295397      -2.604551   \n","25%        -0.167271      -0.348375      -0.270064      -0.330932   \n","50%        -0.023410       0.047972       0.077384      -0.060110   \n","75%         0.125877       0.427066       0.374540       0.253688   \n","max        19.002942       4.022866       7.519589       3.517346   \n","\n","                 V27            V28         Amount          Class  \n","count  225834.000000  225834.000000  225834.000000  225834.000000  \n","mean        0.000292       0.002048      90.806688       0.001838  \n","std         0.399741       0.333773     250.156562       0.042828  \n","min       -22.565679     -11.710896       0.000000       0.000000  \n","25%        -0.069417      -0.047525       6.000000       0.000000  \n","50%         0.003677       0.016078      23.400000       0.000000  \n","75%         0.089114       0.078149      79.990000       0.000000  \n","max        12.152401      33.847808   19656.530000       1.000000  \n","\n","[8 rows x 31 columns]"],"text/html":["\n","  <div id=\"df-a9a87103-19da-48b4-9f62-25ba6c17ab69\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Time</th>\n","      <th>V1</th>\n","      <th>V2</th>\n","      <th>V3</th>\n","      <th>V4</th>\n","      <th>V5</th>\n","      <th>V6</th>\n","      <th>V7</th>\n","      <th>V8</th>\n","      <th>V9</th>\n","      <th>...</th>\n","      <th>V21</th>\n","      <th>V22</th>\n","      <th>V23</th>\n","      <th>V24</th>\n","      <th>V25</th>\n","      <th>V26</th>\n","      <th>V27</th>\n","      <th>V28</th>\n","      <th>Amount</th>\n","      <th>Class</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>225834.000000</td>\n","      <td>225834.000000</td>\n","      <td>225834.000000</td>\n","      <td>225834.000000</td>\n","      <td>225834.000000</td>\n","      <td>225834.000000</td>\n","      <td>225834.000000</td>\n","      <td>225834.000000</td>\n","      <td>225834.000000</td>\n","      <td>225834.000000</td>\n","      <td>...</td>\n","      <td>225834.000000</td>\n","      <td>225834.000000</td>\n","      <td>225834.000000</td>\n","      <td>225834.000000</td>\n","      <td>225834.000000</td>\n","      <td>225834.000000</td>\n","      <td>225834.000000</td>\n","      <td>225834.000000</td>\n","      <td>225834.000000</td>\n","      <td>225834.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>78457.091147</td>\n","      <td>-0.070221</td>\n","      <td>-0.012718</td>\n","      <td>0.190612</td>\n","      <td>0.046190</td>\n","      <td>-0.066129</td>\n","      <td>0.031791</td>\n","      <td>-0.028068</td>\n","      <td>0.004999</td>\n","      <td>0.002379</td>\n","      <td>...</td>\n","      <td>-0.006618</td>\n","      <td>-0.023940</td>\n","      <td>-0.010388</td>\n","      <td>0.001126</td>\n","      <td>0.039684</td>\n","      <td>0.003210</td>\n","      <td>0.000292</td>\n","      <td>0.002048</td>\n","      <td>90.806688</td>\n","      <td>0.001838</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>39188.639076</td>\n","      <td>1.941389</td>\n","      <td>1.656331</td>\n","      <td>1.488740</td>\n","      <td>1.410838</td>\n","      <td>1.372048</td>\n","      <td>1.320680</td>\n","      <td>1.227409</td>\n","      <td>1.209119</td>\n","      <td>1.123912</td>\n","      <td>...</td>\n","      <td>0.744742</td>\n","      <td>0.708106</td>\n","      <td>0.627828</td>\n","      <td>0.605989</td>\n","      <td>0.506562</td>\n","      <td>0.486694</td>\n","      <td>0.399741</td>\n","      <td>0.333773</td>\n","      <td>250.156562</td>\n","      <td>0.042828</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000000</td>\n","      <td>-56.407510</td>\n","      <td>-72.715728</td>\n","      <td>-33.680984</td>\n","      <td>-5.683171</td>\n","      <td>-42.147898</td>\n","      <td>-26.160506</td>\n","      <td>-43.557242</td>\n","      <td>-73.216718</td>\n","      <td>-13.434066</td>\n","      <td>...</td>\n","      <td>-34.830382</td>\n","      <td>-10.933144</td>\n","      <td>-44.807735</td>\n","      <td>-2.836627</td>\n","      <td>-10.295397</td>\n","      <td>-2.604551</td>\n","      <td>-22.565679</td>\n","      <td>-11.710896</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>47434.000000</td>\n","      <td>-0.950632</td>\n","      <td>-0.599636</td>\n","      <td>-0.555614</td>\n","      <td>-0.823058</td>\n","      <td>-0.751399</td>\n","      <td>-0.730548</td>\n","      <td>-0.569140</td>\n","      <td>-0.194608</td>\n","      <td>-0.662162</td>\n","      <td>...</td>\n","      <td>-0.225627</td>\n","      <td>-0.533444</td>\n","      <td>-0.167271</td>\n","      <td>-0.348375</td>\n","      <td>-0.270064</td>\n","      <td>-0.330932</td>\n","      <td>-0.069417</td>\n","      <td>-0.047525</td>\n","      <td>6.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>72855.000000</td>\n","      <td>-0.038582</td>\n","      <td>0.068950</td>\n","      <td>0.379978</td>\n","      <td>0.043471</td>\n","      <td>-0.125020</td>\n","      <td>-0.236387</td>\n","      <td>0.008559</td>\n","      <td>0.034117</td>\n","      <td>-0.068614</td>\n","      <td>...</td>\n","      <td>-0.035278</td>\n","      <td>-0.012444</td>\n","      <td>-0.023410</td>\n","      <td>0.047972</td>\n","      <td>0.077384</td>\n","      <td>-0.060110</td>\n","      <td>0.003677</td>\n","      <td>0.016078</td>\n","      <td>23.400000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>119668.000000</td>\n","      <td>1.239281</td>\n","      <td>0.781021</td>\n","      <td>1.158088</td>\n","      <td>0.839729</td>\n","      <td>0.528213</td>\n","      <td>0.434236</td>\n","      <td>0.530821</td>\n","      <td>0.332996</td>\n","      <td>0.613875</td>\n","      <td>...</td>\n","      <td>0.167722</td>\n","      <td>0.469443</td>\n","      <td>0.125877</td>\n","      <td>0.427066</td>\n","      <td>0.374540</td>\n","      <td>0.253688</td>\n","      <td>0.089114</td>\n","      <td>0.078149</td>\n","      <td>79.990000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>144416.000000</td>\n","      <td>2.454930</td>\n","      <td>22.057729</td>\n","      <td>9.382558</td>\n","      <td>16.875344</td>\n","      <td>34.801666</td>\n","      <td>22.529298</td>\n","      <td>36.877368</td>\n","      <td>20.007208</td>\n","      <td>15.594995</td>\n","      <td>...</td>\n","      <td>27.202839</td>\n","      <td>10.503090</td>\n","      <td>19.002942</td>\n","      <td>4.022866</td>\n","      <td>7.519589</td>\n","      <td>3.517346</td>\n","      <td>12.152401</td>\n","      <td>33.847808</td>\n","      <td>19656.530000</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>8 rows Ã— 31 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a9a87103-19da-48b4-9f62-25ba6c17ab69')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a9a87103-19da-48b4-9f62-25ba6c17ab69 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a9a87103-19da-48b4-9f62-25ba6c17ab69');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-4d3e8ceb-a129-403d-a006-33d5f957a242\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4d3e8ceb-a129-403d-a006-33d5f957a242')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-4d3e8ceb-a129-403d-a006-33d5f957a242 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe"}},"metadata":{},"execution_count":108}]},{"cell_type":"markdown","source":["# **Anomaly Detection**\n"],"metadata":{"id":"u7uOrW9_AQes"}},{"cell_type":"code","source":["from sklearn.ensemble import IsolationForest\n","from sklearn.preprocessing import StandardScaler\n","\n","features = df.drop(columns=['Time', 'Class'])\n","X = df[features.columns]\n","\n","scaler = StandardScaler()\n","X_scaled = scaler.fit_transform(X)\n","\n","iso_forest = IsolationForest(contamination=0.01)\n","df['anomaly'] = iso_forest.fit_predict(X_scaled)\n","\n","print(df['anomaly'].value_counts())\n","\n","anomalies = df[df['anomaly'] == -1]\n","print(anomalies)\n"],"metadata":{"id":"u1V-LR8rANqy","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1718822703930,"user_tz":-330,"elapsed":18817,"user":{"displayName":"Shibin Nair","userId":"12312801401816155479"}},"outputId":"d2ba61d7-aeb4-4f84-cb45-21f5131898be"},"execution_count":109,"outputs":[{"output_type":"stream","name":"stdout","text":["anomaly\n"," 1    223575\n","-1      2259\n","Name: count, dtype: int64\n","            Time         V1         V2        V3        V4        V5  \\\n","164        103.0  -6.093248 -12.114213 -5.694973  3.294389 -1.413792   \n","362        266.0  -2.564961   2.470985  2.649417 -1.564256  1.794297   \n","601        454.0  -3.133891   2.887394  2.178690 -1.576535  1.434510   \n","1281       990.0  -2.960339  -4.268302 -0.959247  0.342961 -5.319277   \n","1388      1077.0  -3.936794  -3.670519 -1.453820  2.299750 -9.749440   \n","...          ...        ...        ...       ...       ...       ...   \n","225665  144343.0  -7.138007   6.813704 -4.409242  2.412901 -0.328360   \n","225669  144345.0  -9.742090  -8.480402 -3.582175  1.337566 -3.465308   \n","225697  144353.0 -12.913752 -11.404931 -5.348387  2.319763 -4.275901   \n","225809  144407.0  -9.230079   8.010768 -7.476914 -0.942063 -5.085235   \n","225822  144412.0  -8.704377  -9.780699 -1.731980  1.260919  3.372983   \n","\n","              V6         V7         V8        V9  ...       V22       V23  \\\n","164     4.776000   4.808426  -0.228197 -0.525896  ... -2.264037 -3.553381   \n","362    -0.614742   4.185906  -3.855359  5.436633  ... -0.463149 -0.532466   \n","601    -0.687313   3.816056  -3.416915  5.459274  ... -0.498518 -0.476668   \n","1281    1.914090   6.359749  -0.758096 -2.357851  ... -1.090530  4.095021   \n","1388    6.456410  10.784088  -2.160016 -0.238116  ...  0.957186  2.441960   \n","...          ...        ...        ...       ...  ...       ...       ...   \n","225665  2.929192  -7.096849 -17.048875 -2.783721  ...  2.444534  1.871488   \n","225669  4.292190   5.893034  -1.190614  1.133534  ... -1.427034 -2.957343   \n","225697  4.183129   6.108224  -1.087491  1.352583  ... -1.914568 -5.289093   \n","225809 -2.009370  -4.612946   6.503395  0.882219  ...  0.883346  0.965032   \n","225822  0.011427   0.634514   0.020507  1.427537  ...  1.374359  7.543260   \n","\n","             V24       V25       V26       V27       V28   Amount  Class  \\\n","164     1.215279 -0.406073 -0.653384 -0.711222  0.672900  3828.04    0.0   \n","362     0.306494  0.226844 -0.365416 -0.936735 -2.733887    10.35    0.0   \n","601     0.302196  0.299993 -0.359155 -0.958818 -2.735623     9.65    0.0   \n","1281    0.164444  0.463424  0.171845 -0.591534  0.152115  1736.00    0.0   \n","1388    0.250607  0.300908  1.157867  1.624284 -1.638647  2452.03    0.0   \n","...          ...       ...       ...       ...       ...      ...    ...   \n","225665  0.444427 -0.441380 -0.242188 -1.119169 -0.452966     0.76    0.0   \n","225669 -0.456807 -0.117976  0.322449  0.407214  2.095218  1690.57    0.0   \n","225697 -0.241819 -0.540132  0.241365  0.757338  1.558350  1690.57    0.0   \n","225809 -0.046465  0.488376 -0.111546  0.644638  0.512127    17.99    0.0   \n","225822 -1.095097  0.449702  1.500185  2.529789 -1.310401   600.30    0.0   \n","\n","        anomaly  \n","164          -1  \n","362          -1  \n","601          -1  \n","1281         -1  \n","1388         -1  \n","...         ...  \n","225665       -1  \n","225669       -1  \n","225697       -1  \n","225809       -1  \n","225822       -1  \n","\n","[2259 rows x 32 columns]\n"]}]},{"cell_type":"markdown","source":["# **Machine Learning Models - 1. Logistic Regression**"],"metadata":{"id":"akYYeknEATNZ"}},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.tree import DecisionTreeClassifier\n","from sklearn.metrics import classification_report, confusion_matrix\n","from sklearn.neural_network import MLPClassifier\n","\n","features = df.drop(columns=['Time', 'Class', 'anomaly'])\n","target = df['Class']\n","\n","X_train, X_test, y_train, y_test = train_test_split(features, target, test_size=0.3, random_state=42)\n","\n","log_reg = LogisticRegression()\n","log_reg.fit(X_train, y_train)\n","y_pred_log_reg = log_reg.predict(X_test)\n","print(\"Logistic Regression:\")\n","print(classification_report(y_test, y_pred_log_reg))\n","print(confusion_matrix(y_test, y_pred_log_reg))"],"metadata":{"id":"4-SyKHXWBDEH","executionInfo":{"status":"ok","timestamp":1718822713663,"user_tz":-330,"elapsed":5926,"user":{"displayName":"Shibin Nair","userId":"12312801401816155479"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"53678780-16c9-4a0f-cd36-fae5c4f14310"},"execution_count":110,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n"]},{"output_type":"stream","name":"stdout","text":["Logistic Regression:\n","              precision    recall  f1-score   support\n","\n","         0.0       1.00      1.00      1.00     67627\n","         1.0       0.84      0.65      0.73       124\n","\n","    accuracy                           1.00     67751\n","   macro avg       0.92      0.83      0.87     67751\n","weighted avg       1.00      1.00      1.00     67751\n","\n","[[67611    16]\n"," [   43    81]]\n"]}]},{"cell_type":"markdown","source":["# **Machine Learning Models - 2. Decision Tree**"],"metadata":{"id":"z09Ld1NBAhL7"}},{"cell_type":"code","source":["tree_clf = DecisionTreeClassifier()\n","tree_clf.fit(X_train, y_train)\n","y_pred_tree = tree_clf.predict(X_test)\n","print(\"Decision Tree:\")\n","print(classification_report(y_test, y_pred_tree))\n","print(confusion_matrix(y_test, y_pred_tree))"],"metadata":{"id":"Yxa8_HdvBKAY","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1718822739228,"user_tz":-330,"elapsed":21578,"user":{"displayName":"Shibin Nair","userId":"12312801401816155479"}},"outputId":"ff077dd0-976a-48a6-bcc0-2548c2fe2992"},"execution_count":111,"outputs":[{"output_type":"stream","name":"stdout","text":["Decision Tree:\n","              precision    recall  f1-score   support\n","\n","         0.0       1.00      1.00      1.00     67627\n","         1.0       0.80      0.80      0.80       124\n","\n","    accuracy                           1.00     67751\n","   macro avg       0.90      0.90      0.90     67751\n","weighted avg       1.00      1.00      1.00     67751\n","\n","[[67602    25]\n"," [   25    99]]\n"]}]},{"cell_type":"markdown","source":["# **Machine Learning Models - 3. Neural Network**"],"metadata":{"id":"LvJeE5AMAuwZ"}},{"cell_type":"code","source":["mlp_clf = MLPClassifier(hidden_layer_sizes=(100,), max_iter=300)\n","mlp_clf.fit(X_train, y_train)\n","y_pred_mlp = mlp_clf.predict(X_test)\n","print(\"Neural Network:\")\n","print(classification_report(y_test, y_pred_mlp))\n","print(confusion_matrix(y_test, y_pred_mlp))"],"metadata":{"id":"ecCmbiTiAdv-","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1718822825695,"user_tz":-330,"elapsed":83240,"user":{"displayName":"Shibin Nair","userId":"12312801401816155479"}},"outputId":"631ce0bb-a667-49c1-9c9b-bf4c1e5aa97f"},"execution_count":112,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:693: UserWarning: Training interrupted by user.\n","  warnings.warn(\"Training interrupted by user.\")\n"]},{"output_type":"stream","name":"stdout","text":["Neural Network:\n","              precision    recall  f1-score   support\n","\n","         0.0       1.00      1.00      1.00     67627\n","         1.0       0.92      0.79      0.85       124\n","\n","    accuracy                           1.00     67751\n","   macro avg       0.96      0.90      0.93     67751\n","weighted avg       1.00      1.00      1.00     67751\n","\n","[[67619     8]\n"," [   26    98]]\n"]}]},{"cell_type":"markdown","source":["# **Feature Engineering**"],"metadata":{"id":"hZFhnrpyBRaE"}},{"cell_type":"code","source":["from sklearn.preprocessing import PolynomialFeatures\n","\n","poly = PolynomialFeatures(degree=2, interaction_only=True)\n","X_poly = poly.fit_transform(features)\n","\n","tree_clf.fit(X_train, y_train)\n","importances = tree_clf.feature_importances_\n","feature_importance_df = pd.DataFrame({'Feature': features.columns, 'Importance': importances})\n","feature_importance_df = feature_importance_df.sort_values(by='Importance', ascending=False)\n","print(feature_importance_df)\n","\n","top_features = feature_importance_df.head(10)['Feature'].values\n","X_selected = df[top_features]\n"],"metadata":{"id":"ksaBy1t1BNfB","executionInfo":{"status":"ok","timestamp":1718822853252,"user_tz":-330,"elapsed":23452,"user":{"displayName":"Shibin Nair","userId":"12312801401816155479"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"344f9962-d969-4ce9-d977-8e1dfa0594a4"},"execution_count":113,"outputs":[{"output_type":"stream","name":"stdout","text":["   Feature  Importance\n","16     V17    0.577374\n","11     V12    0.076434\n","25     V26    0.053282\n","13     V14    0.050634\n","9      V10    0.045920\n","0       V1    0.024010\n","19     V20    0.021202\n","26     V27    0.016362\n","18     V19    0.013451\n","3       V4    0.012364\n","23     V24    0.012301\n","20     V21    0.011102\n","14     V15    0.010762\n","27     V28    0.010615\n","4       V5    0.009984\n","17     V18    0.008753\n","12     V13    0.007212\n","5       V6    0.007149\n","1       V2    0.006242\n","22     V23    0.003591\n","15     V16    0.003564\n","6       V7    0.003442\n","21     V22    0.003436\n","7       V8    0.003396\n","28  Amount    0.003293\n","24     V25    0.003005\n","8       V9    0.001119\n","10     V11    0.000000\n","2       V3    0.000000\n"]}]},{"cell_type":"markdown","source":["# **Real-time Monitoring**"],"metadata":{"id":"UVqy38RUBUiF"}},{"cell_type":"code","source":["import time\n","\n","def simulate_real_time_monitoring(data, model, features, interval=1):\n","    for index, row in data.iterrows():\n","        row_with_names = pd.DataFrame(row[features].values.reshape(1, -1), columns=features)\n","        prediction = model.predict(row_with_names)[0]\n","        if prediction == 1:\n","            print(f\"Fraud detected at index {index}!\")\n","        else:\n","            print(f\"No fraud detected at index {index}.\")\n","        time.sleep(interval)\n","\n","real_time_data = df.sample(n=10)\n","\n","top_features = df.columns.drop(['Time', 'Class', 'anomaly'])\n","\n","simulate_real_time_monitoring(real_time_data, log_reg, top_features)\n"],"metadata":{"id":"oN9ZDSbEBX7x","executionInfo":{"status":"ok","timestamp":1718822869329,"user_tz":-330,"elapsed":10542,"user":{"displayName":"Shibin Nair","userId":"12312801401816155479"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"088f38dd-b30f-474a-b174-6bd6bdeb3c27"},"execution_count":114,"outputs":[{"output_type":"stream","name":"stdout","text":["No fraud detected at index 125518.\n","No fraud detected at index 74278.\n","No fraud detected at index 67695.\n","No fraud detected at index 158486.\n","No fraud detected at index 32896.\n","No fraud detected at index 116268.\n","No fraud detected at index 160544.\n","No fraud detected at index 157696.\n","No fraud detected at index 143000.\n","No fraud detected at index 78464.\n"]}]},{"cell_type":"markdown","source":["no fraud was detected in the sampled data"],"metadata":{"id":"e66o2aMIjooL"}}]}